<?php
/**
 * ReactionTriggerFieldNames
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Supla\ApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SUPLA Cloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.12-60-g8a642a3e7
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Supla\ApiClient\Model;
use \Supla\ApiClient\ObjectSerializer;

/**
 * ReactionTriggerFieldNames Class Doc Comment
 *
 * @category Class
 * @package  Supla\ApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ReactionTriggerFieldNames
{
    /**
     * Possible values of this enum
     */
    const TEMPERATURE = 'temperature';

    const HUMIDITY = 'humidity';

    const BRIGHTNESS = 'brightness';

    const COLOR_BRIGHTNESS = 'color_brightness';

    const COLOR = 'color';

    const VOLTAGE_AVG = 'voltage_avg';

    const VOLTAGE1 = 'voltage1';

    const VOLTAGE2 = 'voltage2';

    const VOLTAGE3 = 'voltage3';

    const CURRENT_SUM = 'current_sum';

    const CURRENT1 = 'current1';

    const CURRENT2 = 'current2';

    const CURRENT3 = 'current3';

    const POWER_ACTIVE_SUM = 'power_active_sum';

    const POWER_ACTIVE1 = 'power_active1';

    const POWER_ACTIVE2 = 'power_active2';

    const POWER_ACTIVE3 = 'power_active3';

    const POWER_REACTIVE_SUM = 'power_reactive_sum';

    const POWER_REACTIVE1 = 'power_reactive1';

    const POWER_REACTIVE2 = 'power_reactive2';

    const POWER_REACTIVE3 = 'power_reactive3';

    const POWER_APPARENT_SUM = 'power_apparent_sum';

    const POWER_APPARENT1 = 'power_apparent1';

    const POWER_APPARENT2 = 'power_apparent2';

    const POWER_APPARENT3 = 'power_apparent3';

    const FAE1 = 'fae1';

    const FAE2 = 'fae2';

    const FAE3 = 'fae3';

    const FAE_SUM = 'fae_sum';

    const FAE_BALANCED = 'fae_balanced';

    const RAE1 = 'rae1';

    const RAE2 = 'rae2';

    const RAE3 = 'rae3';

    const RAE_SUM = 'rae_sum';

    const RAE_BALANCED = 'rae_balanced';

    const MANUALLY_CLOSED = 'manually_closed';

    const FLOODING = 'flooding';

    const COUNTER = 'counter';

    const CALCULATED_VALUE = 'calculated_value';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::TEMPERATURE,
            self::HUMIDITY,
            self::BRIGHTNESS,
            self::COLOR_BRIGHTNESS,
            self::COLOR,
            self::VOLTAGE_AVG,
            self::VOLTAGE1,
            self::VOLTAGE2,
            self::VOLTAGE3,
            self::CURRENT_SUM,
            self::CURRENT1,
            self::CURRENT2,
            self::CURRENT3,
            self::POWER_ACTIVE_SUM,
            self::POWER_ACTIVE1,
            self::POWER_ACTIVE2,
            self::POWER_ACTIVE3,
            self::POWER_REACTIVE_SUM,
            self::POWER_REACTIVE1,
            self::POWER_REACTIVE2,
            self::POWER_REACTIVE3,
            self::POWER_APPARENT_SUM,
            self::POWER_APPARENT1,
            self::POWER_APPARENT2,
            self::POWER_APPARENT3,
            self::FAE1,
            self::FAE2,
            self::FAE3,
            self::FAE_SUM,
            self::FAE_BALANCED,
            self::RAE1,
            self::RAE2,
            self::RAE3,
            self::RAE_SUM,
            self::RAE_BALANCED,
            self::MANUALLY_CLOSED,
            self::FLOODING,
            self::COUNTER,
            self::CALCULATED_VALUE
        ];
    }
}


