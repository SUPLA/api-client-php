<?php
/**
 * ChannelConfigHvacThermostatTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Supla\ApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SUPLA Cloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 23.09.02-69-g0347cdcf
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Supla\ApiClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ChannelConfigHvacThermostatTest Class Doc Comment
 *
 * @category    Class
 * @description Config for HVAC Thermostat.
 * @package     Supla\ApiClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ChannelConfigHvacThermostatTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ChannelConfigHvacThermostat"
     */
    public function testChannelConfigHvacThermostat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subfunction"
     */
    public function testPropertySubfunction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mainThermometerChannelId"
     */
    public function testPropertyMainThermometerChannelId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auxThermometerChannelId"
     */
    public function testPropertyAuxThermometerChannelId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auxThermometerType"
     */
    public function testPropertyAuxThermometerType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "binarySensorChannelId"
     */
    public function testPropertyBinarySensorChannelId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "antiFreezeAndOverheatProtectionEnabled"
     */
    public function testPropertyAntiFreezeAndOverheatProtectionEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auxMinMaxSetpointEnabled"
     */
    public function testPropertyAuxMinMaxSetpointEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "temperatureSetpointChangeSwitchesToManualMode"
     */
    public function testPropertyTemperatureSetpointChangeSwitchesToManualMode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "availableAlgorithms"
     */
    public function testPropertyAvailableAlgorithms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usedAlgorithm"
     */
    public function testPropertyUsedAlgorithm()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minOnTimeS"
     */
    public function testPropertyMinOnTimeS()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minOffTimeS"
     */
    public function testPropertyMinOffTimeS()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "outputValueOnError"
     */
    public function testPropertyOutputValueOnError()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "weeklySchedule"
     */
    public function testPropertyWeeklySchedule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "altWeeklySchedule"
     */
    public function testPropertyAltWeeklySchedule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "temperatures"
     */
    public function testPropertyTemperatures()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "temperatureConstraints"
     */
    public function testPropertyTemperatureConstraints()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
