<?php
/**
 * ChannelConfigGeneralPurposeMeterTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Supla\ApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SUPLA Cloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.01.01-51-gd3ab095f
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Supla\ApiClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ChannelConfigGeneralPurposeMeterTest Class Doc Comment
 *
 * @category    Class
 * @description Config for &#x60;GENERAL_PURPOSE_METER&#x60; function.
 * @package     Supla\ApiClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ChannelConfigGeneralPurposeMeterTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ChannelConfigGeneralPurposeMeter"
     */
    public function testChannelConfigGeneralPurposeMeter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valueDivider"
     */
    public function testPropertyValueDivider()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valueMultiplier"
     */
    public function testPropertyValueMultiplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valueAdded"
     */
    public function testPropertyValueAdded()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valuePrecision"
     */
    public function testPropertyValuePrecision()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unitBeforeValue"
     */
    public function testPropertyUnitBeforeValue()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unitAfterValue"
     */
    public function testPropertyUnitAfterValue()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "keepHistory"
     */
    public function testPropertyKeepHistory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "chartType"
     */
    public function testPropertyChartType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "defaults"
     */
    public function testPropertyDefaults()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "includeValueAddedInHistory"
     */
    public function testPropertyIncludeValueAddedInHistory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fillMissingData"
     */
    public function testPropertyFillMissingData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowCounterReset"
     */
    public function testPropertyAllowCounterReset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "alwaysDecrement"
     */
    public function testPropertyAlwaysDecrement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
