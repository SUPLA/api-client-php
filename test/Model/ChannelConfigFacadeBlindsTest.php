<?php
/**
 * ChannelConfigFacadeBlindsTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Supla\ApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SUPLA Cloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.12-60-g8a642a3e7
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Supla\ApiClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ChannelConfigFacadeBlindsTest Class Doc Comment
 *
 * @category    Class
 * @description Config for &#x60;CONTROLLINGTHEROLLERSHUTTER&#x60; function.
 * @package     Supla\ApiClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ChannelConfigFacadeBlindsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ChannelConfigFacadeBlinds"
     */
    public function testChannelConfigFacadeBlinds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "openingTimeS"
     */
    public function testPropertyOpeningTimeS()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "closingTimeS"
     */
    public function testPropertyClosingTimeS()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tiltingTimeS"
     */
    public function testPropertyTiltingTimeS()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeSettingAvailable"
     */
    public function testPropertyTimeSettingAvailable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recalibrateAvailable"
     */
    public function testPropertyRecalibrateAvailable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "autoCalibrationAvailable"
     */
    public function testPropertyAutoCalibrationAvailable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "motorUpsideDown"
     */
    public function testPropertyMotorUpsideDown()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buttonsUpsideDown"
     */
    public function testPropertyButtonsUpsideDown()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tiltControlType"
     */
    public function testPropertyTiltControlType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeMargin"
     */
    public function testPropertyTimeMargin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tilt0Angle"
     */
    public function testPropertyTilt0Angle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tilt100Angle"
     */
    public function testPropertyTilt100Angle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
