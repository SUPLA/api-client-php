<?php
/**
 * ChannelStateHvacTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Supla\ApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SUPLA Cloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.01.01-51-gd3ab095f
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Supla\ApiClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ChannelStateHvacTest Class Doc Comment
 *
 * @category    Class
 * @description State of &#x60;HVAC&#x60; thermostat channels.
 * @package     Supla\ApiClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ChannelStateHvacTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ChannelStateHvac"
     */
    public function testChannelStateHvac()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "connected"
     */
    public function testPropertyConnected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "heating"
     */
    public function testPropertyHeating()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cooling"
     */
    public function testPropertyCooling()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manual"
     */
    public function testPropertyManual()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "countdownTimer"
     */
    public function testPropertyCountdownTimer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "thermometerError"
     */
    public function testPropertyThermometerError()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "clockError"
     */
    public function testPropertyClockError()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "forcedOffBySensor"
     */
    public function testPropertyForcedOffBySensor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "weeklyScheduleTemporalOverride"
     */
    public function testPropertyWeeklyScheduleTemporalOverride()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mode"
     */
    public function testPropertyMode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "temperatureHeat"
     */
    public function testPropertyTemperatureHeat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "temperatureCool"
     */
    public function testPropertyTemperatureCool()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "temperatureMain"
     */
    public function testPropertyTemperatureMain()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "humidityMain"
     */
    public function testPropertyHumidityMain()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
